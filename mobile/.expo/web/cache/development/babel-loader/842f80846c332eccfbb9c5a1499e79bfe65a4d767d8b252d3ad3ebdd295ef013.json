{"ast":null,"code":"import _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"disabled\", \"editable\", \"label\", \"error\", \"selectionColor\", \"underlineColor\", \"dense\", \"style\", \"theme\", \"render\", \"multiline\", \"parentState\", \"innerRef\", \"onFocus\", \"forceFocus\", \"onBlur\", \"onChangeText\", \"onLayoutAnimatedText\", \"onLeftAffixLayoutChange\", \"onRightAffixLayoutChange\", \"left\", \"right\", \"placeholderTextColor\"],\n  _excluded2 = [\"fontSize\", \"fontWeight\", \"height\", \"paddingHorizontal\", \"textAlign\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty2(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nimport * as React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport NativeTextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport color from 'color';\nimport InputLabel from \"./Label/InputLabel\";\nimport TextInputAdornment from \"./Adornment/TextInputAdornment\";\nimport { MAXIMIZED_LABEL_FONT_SIZE, MINIMIZED_LABEL_FONT_SIZE, LABEL_WIGGLE_X_OFFSET, ADORNMENT_SIZE, FLAT_INPUT_OFFSET } from \"./constants\";\nimport { calculateLabelTopPosition, calculateInputHeight, calculatePadding, adjustPaddingFlat, interpolatePlaceholder, calculateFlatAffixTopPosition, calculateFlatInputHorizontalPadding } from \"./helpers\";\nimport { getAdornmentConfig, getAdornmentStyleAdjustmentForNativeInput } from \"./Adornment/TextInputAdornment\";\nimport { AdornmentSide, AdornmentType, InputMode } from \"./Adornment/enums\";\nvar MINIMIZED_LABEL_Y_OFFSET = -18;\nvar LABEL_PADDING_TOP = 30;\nvar LABEL_PADDING_TOP_DENSE = 24;\nvar MIN_HEIGHT = 64;\nvar MIN_DENSE_HEIGHT_WL = 52;\nvar MIN_DENSE_HEIGHT = 40;\nvar TextInputFlat = function (_React$Component) {\n  _inherits(TextInputFlat, _React$Component);\n  var _super = _createSuper(TextInputFlat);\n  function TextInputFlat() {\n    _classCallCheck(this, TextInputFlat);\n    return _super.apply(this, arguments);\n  }\n  _createClass(TextInputFlat, [{\n    key: \"render\",\n    value: function render() {\n      var _affixTopPosition, _onAffixChange, _topPosition;\n      var _this$props = this.props,\n        disabled = _this$props.disabled,\n        editable = _this$props.editable,\n        label = _this$props.label,\n        error = _this$props.error,\n        selectionColor = _this$props.selectionColor,\n        underlineColor = _this$props.underlineColor,\n        dense = _this$props.dense,\n        style = _this$props.style,\n        theme = _this$props.theme,\n        render = _this$props.render,\n        multiline = _this$props.multiline,\n        parentState = _this$props.parentState,\n        innerRef = _this$props.innerRef,\n        onFocus = _this$props.onFocus,\n        forceFocus = _this$props.forceFocus,\n        onBlur = _this$props.onBlur,\n        onChangeText = _this$props.onChangeText,\n        onLayoutAnimatedText = _this$props.onLayoutAnimatedText,\n        onLeftAffixLayoutChange = _this$props.onLeftAffixLayoutChange,\n        onRightAffixLayoutChange = _this$props.onRightAffixLayoutChange,\n        left = _this$props.left,\n        right = _this$props.right,\n        placeholderTextColor = _this$props.placeholderTextColor,\n        rest = _objectWithoutProperties(_this$props, _excluded);\n      var colors = theme.colors,\n        fonts = theme.fonts;\n      var font = fonts.regular;\n      var hasActiveOutline = parentState.focused || error;\n      var _ref = StyleSheet.flatten(style) || {},\n        fontSizeStyle = _ref.fontSize,\n        fontWeight = _ref.fontWeight,\n        height = _ref.height,\n        paddingHorizontal = _ref.paddingHorizontal,\n        textAlign = _ref.textAlign,\n        viewStyle = _objectWithoutProperties(_ref, _excluded2);\n      var fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n      var isPaddingHorizontalPassed = paddingHorizontal !== undefined && typeof paddingHorizontal === 'number';\n      var adornmentConfig = getAdornmentConfig({\n        left: left,\n        right: right\n      });\n      var _calculateFlatInputHo = calculateFlatInputHorizontalPadding({\n          adornmentConfig: adornmentConfig\n        }),\n        paddingLeft = _calculateFlatInputHo.paddingLeft,\n        paddingRight = _calculateFlatInputHo.paddingRight;\n      if (isPaddingHorizontalPassed) {\n        paddingLeft = paddingHorizontal;\n        paddingRight = paddingHorizontal;\n      }\n      var leftLayout = parentState.leftLayout,\n        rightLayout = parentState.rightLayout;\n      var rightAffixWidth = right ? rightLayout.width || ADORNMENT_SIZE : ADORNMENT_SIZE;\n      var leftAffixWidth = left ? leftLayout.width || ADORNMENT_SIZE : ADORNMENT_SIZE;\n      var adornmentStyleAdjustmentForNativeInput = getAdornmentStyleAdjustmentForNativeInput({\n        adornmentConfig: adornmentConfig,\n        rightAffixWidth: rightAffixWidth,\n        leftAffixWidth: leftAffixWidth,\n        paddingHorizontal: paddingHorizontal,\n        inputOffset: FLAT_INPUT_OFFSET,\n        mode: InputMode.Flat\n      });\n      var inputTextColor, activeColor, underlineColorCustom, placeholderColor, errorColor;\n      if (disabled) {\n        inputTextColor = activeColor = color(colors.text).alpha(0.54).rgb().string();\n        placeholderColor = colors.disabled;\n        underlineColorCustom = 'transparent';\n      } else {\n        inputTextColor = colors.text;\n        activeColor = error ? colors.error : colors.primary;\n        placeholderColor = colors.placeholder;\n        errorColor = colors.error;\n        underlineColorCustom = underlineColor || colors.disabled;\n      }\n      var containerStyle = {\n        backgroundColor: theme.dark ? color(colors.background).lighten(0.24).rgb().string() : color(colors.background).darken(0.06).rgb().string(),\n        borderTopLeftRadius: theme.roundness,\n        borderTopRightRadius: theme.roundness\n      };\n      var labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n      var fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n      var labelWidth = parentState.labelLayout.width;\n      var labelHeight = parentState.labelLayout.height;\n      var labelHalfWidth = labelWidth / 2;\n      var labelHalfHeight = labelHeight / 2;\n      var baseLabelTranslateX = (I18nManager.isRTL ? 1 : -1) * (labelHalfWidth - labelScale * labelWidth / 2) + (1 - labelScale) * (I18nManager.isRTL ? -1 : 1) * paddingLeft;\n      var minInputHeight = dense ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) - LABEL_PADDING_TOP_DENSE : MIN_HEIGHT - LABEL_PADDING_TOP;\n      var inputHeight = calculateInputHeight(labelHeight, height, minInputHeight);\n      var topPosition = calculateLabelTopPosition(labelHeight, inputHeight, multiline && height ? 0 : !height ? minInputHeight / 2 : 0);\n      if (height && typeof height !== 'number') {\n        console.warn('Currently we support only numbers in height prop');\n      }\n      var paddingSettings = {\n        height: height ? +height : null,\n        labelHalfHeight: labelHalfHeight,\n        offset: FLAT_INPUT_OFFSET,\n        multiline: multiline ? multiline : null,\n        dense: dense ? dense : null,\n        topPosition: topPosition,\n        fontSize: fontSize,\n        label: label,\n        scale: fontScale,\n        isAndroid: Platform.OS === 'android',\n        styles: StyleSheet.flatten(dense ? styles.inputFlatDense : styles.inputFlat)\n      };\n      var pad = calculatePadding(paddingSettings);\n      var paddingFlat = adjustPaddingFlat(_objectSpread(_objectSpread({}, paddingSettings), {}, {\n        pad: pad\n      }));\n      var baseLabelTranslateY = -labelHalfHeight - (topPosition + MINIMIZED_LABEL_Y_OFFSET);\n      var placeholderOpacity = hasActiveOutline ? interpolatePlaceholder(parentState.labeled, hasActiveOutline) : parentState.labelLayout.measured ? 1 : 0;\n      var minHeight = height || (dense ? label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT : MIN_HEIGHT);\n      var flatHeight = inputHeight + (!height ? dense ? LABEL_PADDING_TOP_DENSE : LABEL_PADDING_TOP : 0);\n      var iconTopPosition = (flatHeight - ADORNMENT_SIZE) / 2;\n      var leftAffixTopPosition = leftLayout.height ? calculateFlatAffixTopPosition(_objectSpread(_objectSpread({\n        height: flatHeight\n      }, paddingFlat), {}, {\n        affixHeight: leftLayout.height\n      })) : null;\n      var rightAffixTopPosition = rightLayout.height ? calculateFlatAffixTopPosition(_objectSpread(_objectSpread({\n        height: flatHeight\n      }, paddingFlat), {}, {\n        affixHeight: rightLayout.height\n      })) : null;\n      var labelProps = {\n        label: label,\n        onLayoutAnimatedText: onLayoutAnimatedText,\n        placeholderOpacity: placeholderOpacity,\n        error: error,\n        placeholderStyle: styles.placeholder,\n        baseLabelTranslateY: baseLabelTranslateY,\n        baseLabelTranslateX: baseLabelTranslateX,\n        font: font,\n        fontSize: fontSize,\n        fontWeight: fontWeight,\n        labelScale: labelScale,\n        wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n        topPosition: topPosition,\n        paddingOffset: {\n          paddingLeft: paddingLeft,\n          paddingRight: paddingRight\n        },\n        hasActiveOutline: hasActiveOutline,\n        activeColor: activeColor,\n        placeholderColor: placeholderColor,\n        errorColor: errorColor\n      };\n      var affixTopPosition = (_affixTopPosition = {}, _defineProperty2(_affixTopPosition, AdornmentSide.Left, leftAffixTopPosition), _defineProperty2(_affixTopPosition, AdornmentSide.Right, rightAffixTopPosition), _affixTopPosition);\n      var onAffixChange = (_onAffixChange = {}, _defineProperty2(_onAffixChange, AdornmentSide.Left, onLeftAffixLayoutChange), _defineProperty2(_onAffixChange, AdornmentSide.Right, onRightAffixLayoutChange), _onAffixChange);\n      var adornmentProps = {\n        paddingHorizontal: paddingHorizontal,\n        adornmentConfig: adornmentConfig,\n        forceFocus: forceFocus,\n        topPosition: (_topPosition = {}, _defineProperty2(_topPosition, AdornmentType.Affix, affixTopPosition), _defineProperty2(_topPosition, AdornmentType.Icon, iconTopPosition), _topPosition),\n        onAffixChange: onAffixChange,\n        isTextInputFocused: this.props.parentState.focused\n      };\n      if (adornmentConfig.length) {\n        adornmentProps = _objectSpread(_objectSpread({}, adornmentProps), {}, {\n          left: left,\n          right: right,\n          textStyle: _objectSpread(_objectSpread({}, font), {}, {\n            fontSize: fontSize,\n            fontWeight: fontWeight\n          }),\n          visible: this.props.parentState.labeled\n        });\n      }\n      return React.createElement(View, {\n        style: [containerStyle, viewStyle]\n      }, React.createElement(Underline, {\n        parentState: parentState,\n        underlineColorCustom: underlineColorCustom,\n        error: error,\n        colors: colors,\n        activeColor: activeColor\n      }), React.createElement(View, {\n        style: [styles.labelContainer, {\n          minHeight: minHeight\n        }]\n      }, React.createElement(InputLabel, {\n        parentState: parentState,\n        labelProps: labelProps\n      }), render === null || render === void 0 ? void 0 : render(_objectSpread(_objectSpread({}, rest), {}, {\n        ref: innerRef,\n        onChangeText: onChangeText,\n        placeholder: label ? parentState.placeholder : this.props.placeholder,\n        placeholderTextColor: placeholderTextColor !== null && placeholderTextColor !== void 0 ? placeholderTextColor : placeholderColor,\n        editable: !disabled && editable,\n        selectionColor: typeof selectionColor === 'undefined' ? activeColor : selectionColor,\n        onFocus: onFocus,\n        onBlur: onBlur,\n        underlineColorAndroid: 'transparent',\n        multiline: multiline,\n        style: [styles.input, {\n          paddingLeft: paddingLeft,\n          paddingRight: paddingRight\n        }, !multiline || multiline && height ? {\n          height: flatHeight\n        } : {}, paddingFlat, _objectSpread(_objectSpread({}, font), {}, {\n          fontSize: fontSize,\n          fontWeight: fontWeight,\n          color: inputTextColor,\n          textAlignVertical: multiline ? 'top' : 'center',\n          textAlign: textAlign ? textAlign : I18nManager.isRTL ? 'right' : 'left'\n        }), Platform.OS === 'web' && {\n          outline: 'none'\n        }, adornmentStyleAdjustmentForNativeInput]\n      }))), React.createElement(TextInputAdornment, adornmentProps));\n    }\n  }]);\n  return TextInputFlat;\n}(React.Component);\n_defineProperty(TextInputFlat, \"defaultProps\", {\n  disabled: false,\n  error: false,\n  multiline: false,\n  editable: true,\n  render: function render(props) {\n    return React.createElement(NativeTextInput, props);\n  }\n});\nexport default TextInputFlat;\nvar Underline = function Underline(_ref2) {\n  var parentState = _ref2.parentState,\n    error = _ref2.error,\n    colors = _ref2.colors,\n    activeColor = _ref2.activeColor,\n    underlineColorCustom = _ref2.underlineColorCustom;\n  var backgroundColor = parentState.focused ? activeColor : underlineColorCustom;\n  if (error) backgroundColor = colors.error;\n  return React.createElement(Animated.View, {\n    style: [styles.underline, {\n      backgroundColor: backgroundColor,\n      transform: [{\n        scaleY: parentState.focused ? 1 : 0.5\n      }]\n    }]\n  });\n};\nvar styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0\n  },\n  underline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    height: 2\n  },\n  labelContainer: {\n    paddingTop: 0,\n    paddingBottom: 0\n  },\n  input: {\n    flexGrow: 1,\n    margin: 0,\n    zIndex: 1\n  },\n  inputFlat: {\n    paddingTop: 24,\n    paddingBottom: 4\n  },\n  inputFlatDense: {\n    paddingTop: 22,\n    paddingBottom: 2\n  }\n});","map":{"version":3,"names":["React","View","Animated","NativeTextInput","StyleSheet","I18nManager","Platform","color","InputLabel","TextInputAdornment","MAXIMIZED_LABEL_FONT_SIZE","MINIMIZED_LABEL_FONT_SIZE","LABEL_WIGGLE_X_OFFSET","ADORNMENT_SIZE","FLAT_INPUT_OFFSET","calculateLabelTopPosition","calculateInputHeight","calculatePadding","adjustPaddingFlat","interpolatePlaceholder","calculateFlatAffixTopPosition","calculateFlatInputHorizontalPadding","getAdornmentConfig","getAdornmentStyleAdjustmentForNativeInput","AdornmentSide","AdornmentType","InputMode","MINIMIZED_LABEL_Y_OFFSET","LABEL_PADDING_TOP","LABEL_PADDING_TOP_DENSE","MIN_HEIGHT","MIN_DENSE_HEIGHT_WL","MIN_DENSE_HEIGHT","TextInputFlat","_React$Component","_inherits","_super","_createSuper","_classCallCheck","apply","arguments","_createClass","key","value","render","_affixTopPosition","_onAffixChange","_topPosition","_this$props","props","disabled","editable","label","error","selectionColor","underlineColor","dense","style","theme","multiline","parentState","innerRef","onFocus","forceFocus","onBlur","onChangeText","onLayoutAnimatedText","onLeftAffixLayoutChange","onRightAffixLayoutChange","left","right","placeholderTextColor","rest","_objectWithoutProperties","_excluded","colors","fonts","font","regular","hasActiveOutline","focused","_ref","flatten","fontSizeStyle","fontSize","fontWeight","height","paddingHorizontal","textAlign","viewStyle","_excluded2","isPaddingHorizontalPassed","undefined","adornmentConfig","_calculateFlatInputHo","paddingLeft","paddingRight","leftLayout","rightLayout","rightAffixWidth","width","leftAffixWidth","adornmentStyleAdjustmentForNativeInput","inputOffset","mode","Flat","inputTextColor","activeColor","underlineColorCustom","placeholderColor","errorColor","text","alpha","rgb","string","primary","placeholder","containerStyle","backgroundColor","dark","background","lighten","darken","borderTopLeftRadius","roundness","borderTopRightRadius","labelScale","fontScale","labelWidth","labelLayout","labelHeight","labelHalfWidth","labelHalfHeight","baseLabelTranslateX","isRTL","minInputHeight","inputHeight","topPosition","console","warn","paddingSettings","offset","scale","isAndroid","OS","styles","inputFlatDense","inputFlat","pad","paddingFlat","_objectSpread","baseLabelTranslateY","placeholderOpacity","labeled","measured","minHeight","flatHeight","iconTopPosition","leftAffixTopPosition","affixHeight","rightAffixTopPosition","labelProps","placeholderStyle","wiggleOffsetX","paddingOffset","affixTopPosition","_defineProperty2","Left","Right","onAffixChange","adornmentProps","Affix","Icon","isTextInputFocused","length","textStyle","visible","createElement","Underline","labelContainer","ref","underlineColorAndroid","input","textAlignVertical","outline","Component","_ref2","underline","transform","scaleY","create","position","bottom","paddingTop","paddingBottom","flexGrow","margin","zIndex"],"sources":["/home/khaibq/blockchain/mobile/node_modules/react-native-paper/lib/module/components/TextInput/TextInputFlat.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  View,\n  Animated,\n  TextInput as NativeTextInput,\n  StyleSheet,\n  I18nManager,\n  Platform,\n  TextStyle,\n} from 'react-native';\nimport color from 'color';\nimport InputLabel from './Label/InputLabel';\nimport TextInputAdornment, {\n  TextInputAdornmentProps,\n} from './Adornment/TextInputAdornment';\nimport type { RenderProps, ChildTextInputProps } from './types';\n\nimport {\n  MAXIMIZED_LABEL_FONT_SIZE,\n  MINIMIZED_LABEL_FONT_SIZE,\n  LABEL_WIGGLE_X_OFFSET,\n  ADORNMENT_SIZE,\n  FLAT_INPUT_OFFSET,\n} from './constants';\n\nimport {\n  calculateLabelTopPosition,\n  calculateInputHeight,\n  calculatePadding,\n  adjustPaddingFlat,\n  Padding,\n  interpolatePlaceholder,\n  calculateFlatAffixTopPosition,\n  calculateFlatInputHorizontalPadding,\n} from './helpers';\nimport {\n  getAdornmentConfig,\n  getAdornmentStyleAdjustmentForNativeInput,\n} from './Adornment/TextInputAdornment';\nimport { AdornmentSide, AdornmentType, InputMode } from './Adornment/enums';\n\nconst MINIMIZED_LABEL_Y_OFFSET = -18;\n\nconst LABEL_PADDING_TOP = 30;\nconst LABEL_PADDING_TOP_DENSE = 24;\nconst MIN_HEIGHT = 64;\nconst MIN_DENSE_HEIGHT_WL = 52;\nconst MIN_DENSE_HEIGHT = 40;\n\nclass TextInputFlat extends React.Component<ChildTextInputProps> {\n  static defaultProps = {\n    disabled: false,\n    error: false,\n    multiline: false,\n    editable: true,\n    render: (props: RenderProps) => <NativeTextInput {...props} />,\n  };\n\n  render() {\n    const {\n      disabled,\n      editable,\n      label,\n      error,\n      selectionColor,\n      underlineColor,\n      dense,\n      style,\n      theme,\n      render,\n      multiline,\n      parentState,\n      innerRef,\n      onFocus,\n      forceFocus,\n      onBlur,\n      onChangeText,\n      onLayoutAnimatedText,\n      onLeftAffixLayoutChange,\n      onRightAffixLayoutChange,\n      left,\n      right,\n      placeholderTextColor,\n      ...rest\n    } = this.props;\n\n    const { colors, fonts } = theme;\n    const font = fonts.regular;\n    const hasActiveOutline = parentState.focused || error;\n\n    const {\n      fontSize: fontSizeStyle,\n      fontWeight,\n      height,\n      paddingHorizontal,\n      textAlign,\n      ...viewStyle\n    } = (StyleSheet.flatten(style) || {}) as TextStyle;\n    const fontSize = fontSizeStyle || MAXIMIZED_LABEL_FONT_SIZE;\n\n    const isPaddingHorizontalPassed =\n      paddingHorizontal !== undefined && typeof paddingHorizontal === 'number';\n\n    const adornmentConfig = getAdornmentConfig({\n      left,\n      right,\n    });\n\n    let { paddingLeft, paddingRight } = calculateFlatInputHorizontalPadding({\n      adornmentConfig,\n    });\n\n    if (isPaddingHorizontalPassed) {\n      paddingLeft = paddingHorizontal as number;\n      paddingRight = paddingHorizontal as number;\n    }\n\n    const { leftLayout, rightLayout } = parentState;\n\n    const rightAffixWidth = right\n      ? rightLayout.width || ADORNMENT_SIZE\n      : ADORNMENT_SIZE;\n\n    const leftAffixWidth = left\n      ? leftLayout.width || ADORNMENT_SIZE\n      : ADORNMENT_SIZE;\n\n    const adornmentStyleAdjustmentForNativeInput = getAdornmentStyleAdjustmentForNativeInput(\n      {\n        adornmentConfig,\n        rightAffixWidth,\n        leftAffixWidth,\n        paddingHorizontal,\n        inputOffset: FLAT_INPUT_OFFSET,\n        mode: InputMode.Flat,\n      }\n    );\n\n    let inputTextColor,\n      activeColor,\n      underlineColorCustom,\n      placeholderColor,\n      errorColor;\n\n    if (disabled) {\n      inputTextColor = activeColor = color(colors.text)\n        .alpha(0.54)\n        .rgb()\n        .string();\n      placeholderColor = colors.disabled;\n      underlineColorCustom = 'transparent';\n    } else {\n      inputTextColor = colors.text;\n      activeColor = error ? colors.error : colors.primary;\n      placeholderColor = colors.placeholder;\n      errorColor = colors.error;\n      underlineColorCustom = underlineColor || colors.disabled;\n    }\n\n    const containerStyle = {\n      backgroundColor: theme.dark\n        ? color(colors.background).lighten(0.24).rgb().string()\n        : color(colors.background).darken(0.06).rgb().string(),\n      borderTopLeftRadius: theme.roundness,\n      borderTopRightRadius: theme.roundness,\n    };\n\n    const labelScale = MINIMIZED_LABEL_FONT_SIZE / fontSize;\n    const fontScale = MAXIMIZED_LABEL_FONT_SIZE / fontSize;\n\n    const labelWidth = parentState.labelLayout.width;\n    const labelHeight = parentState.labelLayout.height;\n    const labelHalfWidth = labelWidth / 2;\n    const labelHalfHeight = labelHeight / 2;\n\n    const baseLabelTranslateX =\n      (I18nManager.isRTL ? 1 : -1) *\n        (labelHalfWidth - (labelScale * labelWidth) / 2) +\n      (1 - labelScale) * (I18nManager.isRTL ? -1 : 1) * paddingLeft;\n\n    const minInputHeight = dense\n      ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) -\n        LABEL_PADDING_TOP_DENSE\n      : MIN_HEIGHT - LABEL_PADDING_TOP;\n\n    const inputHeight = calculateInputHeight(\n      labelHeight,\n      height,\n      minInputHeight\n    );\n\n    const topPosition = calculateLabelTopPosition(\n      labelHeight,\n      inputHeight,\n      multiline && height ? 0 : !height ? minInputHeight / 2 : 0\n    );\n\n    if (height && typeof height !== 'number') {\n      // eslint-disable-next-line\n      console.warn('Currently we support only numbers in height prop');\n    }\n\n    const paddingSettings = {\n      height: height ? +height : null,\n      labelHalfHeight,\n      offset: FLAT_INPUT_OFFSET,\n      multiline: multiline ? multiline : null,\n      dense: dense ? dense : null,\n      topPosition,\n      fontSize,\n      label,\n      scale: fontScale,\n      isAndroid: Platform.OS === 'android',\n      styles: StyleSheet.flatten(\n        dense ? styles.inputFlatDense : styles.inputFlat\n      ) as Padding,\n    };\n\n    const pad = calculatePadding(paddingSettings);\n\n    const paddingFlat = adjustPaddingFlat({\n      ...paddingSettings,\n      pad,\n    });\n\n    const baseLabelTranslateY =\n      -labelHalfHeight - (topPosition + MINIMIZED_LABEL_Y_OFFSET);\n\n    const placeholderOpacity = hasActiveOutline\n      ? interpolatePlaceholder(parentState.labeled, hasActiveOutline)\n      : parentState.labelLayout.measured\n      ? 1\n      : 0;\n\n    const minHeight =\n      height ||\n      (dense ? (label ? MIN_DENSE_HEIGHT_WL : MIN_DENSE_HEIGHT) : MIN_HEIGHT);\n\n    const flatHeight =\n      inputHeight +\n      (!height ? (dense ? LABEL_PADDING_TOP_DENSE : LABEL_PADDING_TOP) : 0);\n\n    const iconTopPosition = (flatHeight - ADORNMENT_SIZE) / 2;\n\n    const leftAffixTopPosition = leftLayout.height\n      ? calculateFlatAffixTopPosition({\n          height: flatHeight,\n          ...paddingFlat,\n          affixHeight: leftLayout.height,\n        })\n      : null;\n\n    const rightAffixTopPosition = rightLayout.height\n      ? calculateFlatAffixTopPosition({\n          height: flatHeight,\n          ...paddingFlat,\n          affixHeight: rightLayout.height,\n        })\n      : null;\n\n    const labelProps = {\n      label,\n      onLayoutAnimatedText,\n      placeholderOpacity,\n      error,\n      placeholderStyle: styles.placeholder,\n      baseLabelTranslateY,\n      baseLabelTranslateX,\n      font,\n      fontSize,\n      fontWeight,\n      labelScale,\n      wiggleOffsetX: LABEL_WIGGLE_X_OFFSET,\n      topPosition,\n      paddingOffset: { paddingLeft, paddingRight },\n      hasActiveOutline,\n      activeColor,\n      placeholderColor,\n      errorColor,\n    };\n    const affixTopPosition = {\n      [AdornmentSide.Left]: leftAffixTopPosition,\n      [AdornmentSide.Right]: rightAffixTopPosition,\n    };\n    const onAffixChange = {\n      [AdornmentSide.Left]: onLeftAffixLayoutChange,\n      [AdornmentSide.Right]: onRightAffixLayoutChange,\n    };\n\n    let adornmentProps: TextInputAdornmentProps = {\n      paddingHorizontal,\n      adornmentConfig,\n      forceFocus,\n      topPosition: {\n        [AdornmentType.Affix]: affixTopPosition,\n        [AdornmentType.Icon]: iconTopPosition,\n      },\n      onAffixChange,\n      isTextInputFocused: this.props.parentState.focused,\n    };\n    if (adornmentConfig.length) {\n      adornmentProps = {\n        ...adornmentProps,\n        left,\n        right,\n        textStyle: { ...font, fontSize, fontWeight },\n        visible: this.props.parentState.labeled,\n      };\n    }\n\n    return (\n      <View style={[containerStyle, viewStyle]}>\n        <Underline\n          parentState={parentState}\n          underlineColorCustom={underlineColorCustom}\n          error={error}\n          colors={colors}\n          activeColor={activeColor}\n        />\n        <View\n          style={[\n            styles.labelContainer,\n            {\n              minHeight,\n            },\n          ]}\n        >\n          <InputLabel parentState={parentState} labelProps={labelProps} />\n          {render?.({\n            ...rest,\n            ref: innerRef,\n            onChangeText,\n            placeholder: label\n              ? parentState.placeholder\n              : this.props.placeholder,\n            placeholderTextColor: placeholderTextColor ?? placeholderColor,\n            editable: !disabled && editable,\n            selectionColor:\n              typeof selectionColor === 'undefined'\n                ? activeColor\n                : selectionColor,\n            onFocus,\n            onBlur,\n            underlineColorAndroid: 'transparent',\n            multiline,\n            style: [\n              styles.input,\n              { paddingLeft, paddingRight },\n              !multiline || (multiline && height) ? { height: flatHeight } : {},\n              paddingFlat,\n              {\n                ...font,\n                fontSize,\n                fontWeight,\n                color: inputTextColor,\n                textAlignVertical: multiline ? 'top' : 'center',\n                textAlign: textAlign\n                  ? textAlign\n                  : I18nManager.isRTL\n                  ? 'right'\n                  : 'left',\n              },\n              Platform.OS === 'web' && { outline: 'none' },\n              adornmentStyleAdjustmentForNativeInput,\n            ],\n          })}\n        </View>\n        <TextInputAdornment {...adornmentProps} />\n      </View>\n    );\n  }\n}\n\nexport default TextInputFlat;\n\ntype UnderlineProps = {\n  parentState: {\n    focused: boolean;\n  };\n  error?: boolean;\n  colors: {\n    error: string;\n  };\n  activeColor: string;\n  underlineColorCustom?: string;\n};\n\nconst Underline = ({\n  parentState,\n  error,\n  colors,\n  activeColor,\n  underlineColorCustom,\n}: UnderlineProps) => {\n  let backgroundColor = parentState.focused\n    ? activeColor\n    : underlineColorCustom;\n  if (error) backgroundColor = colors.error;\n  return (\n    <Animated.View\n      style={[\n        styles.underline,\n        {\n          backgroundColor,\n          // Underlines is thinner when input is not focused\n          transform: [{ scaleY: parentState.focused ? 1 : 0.5 }],\n        },\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  placeholder: {\n    position: 'absolute',\n    left: 0,\n  },\n  underline: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n    height: 2,\n  },\n  labelContainer: {\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n  input: {\n    flexGrow: 1,\n    margin: 0,\n    zIndex: 1,\n  },\n  inputFlat: {\n    paddingTop: 24,\n    paddingBottom: 4,\n  },\n  inputFlatDense: {\n    paddingTop: 22,\n    paddingBottom: 2,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}