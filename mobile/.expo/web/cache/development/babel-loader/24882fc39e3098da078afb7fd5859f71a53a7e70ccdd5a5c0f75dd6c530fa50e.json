{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport NativeModule from \"./NativeReanimated\";\nvar jsListener = function jsListener(eventName, handler) {\n  return function (evt) {\n    handler(_extends(_extends({}, evt.nativeEvent), {\n      eventName: eventName\n    }));\n  };\n};\nvar WorkletEventHandler = function () {\n  function WorkletEventHandler(worklet) {\n    var eventNames = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    _classCallCheck(this, WorkletEventHandler);\n    this.worklet = worklet;\n    this.eventNames = eventNames;\n    this.reattachNeeded = false;\n    if (!NativeModule.native) {\n      this.listeners = eventNames.reduce(function (acc, eventName) {\n        acc[eventName] = jsListener(eventName, worklet);\n        return acc;\n      }, {});\n    }\n  }\n  _createClass(WorkletEventHandler, [{\n    key: \"updateWorklet\",\n    value: function updateWorklet(newWorklet) {\n      this.worklet = newWorklet;\n      this.reattachNeeded = true;\n    }\n  }, {\n    key: \"registerForEvents\",\n    value: function registerForEvents(viewTag) {\n      var _this = this;\n      var fallbackEventName = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n      this.viewTag = viewTag;\n      this.registrations = this.eventNames.map(function (eventName) {\n        return NativeModule.registerEventHandler(viewTag + eventName, _this.worklet);\n      });\n      if (this.registrations.length === 0 && fallbackEventName) {\n        this.registrations.push(NativeModule.registerEventHandler(viewTag + fallbackEventName, this.worklet));\n      }\n    }\n  }, {\n    key: \"unregisterFromEvents\",\n    value: function unregisterFromEvents() {\n      this.registrations && this.registrations.forEach(function (id) {\n        return NativeModule.unregisterEventHandler(id);\n      });\n      this.registrations = undefined;\n    }\n  }]);\n  return WorkletEventHandler;\n}();\nexport { WorkletEventHandler as default };","map":{"version":3,"names":["NativeModule","jsListener","eventName","handler","evt","_extends","nativeEvent","WorkletEventHandler","worklet","eventNames","arguments","length","undefined","_classCallCheck","reattachNeeded","native","listeners","reduce","acc","_createClass","key","value","updateWorklet","newWorklet","registerForEvents","viewTag","_this","fallbackEventName","registrations","map","registerEventHandler","push","unregisterFromEvents","forEach","id","unregisterEventHandler","default"],"sources":["/home/khaibq/blockchain/mobile/node_modules/react-native-reanimated/lib/reanimated2/WorkletEventHandler.js"],"sourcesContent":["// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\nimport NativeModule from './NativeReanimated';\nconst jsListener = (eventName, handler) => (evt) => {\n    handler(Object.assign(Object.assign({}, evt.nativeEvent), { eventName }));\n};\nexport default class WorkletEventHandler {\n    constructor(worklet, eventNames = []) {\n        this.worklet = worklet;\n        this.eventNames = eventNames;\n        this.reattachNeeded = false;\n        if (!NativeModule.native) {\n            this.listeners = eventNames.reduce((acc, eventName) => {\n                acc[eventName] = jsListener(eventName, worklet);\n                return acc;\n            }, {});\n        }\n    }\n    updateWorklet(newWorklet) {\n        this.worklet = newWorklet;\n        this.reattachNeeded = true;\n    }\n    registerForEvents(viewTag, fallbackEventName = undefined) {\n        this.viewTag = viewTag;\n        this.registrations = this.eventNames.map((eventName) => NativeModule.registerEventHandler(viewTag + eventName, this.worklet));\n        if (this.registrations.length === 0 && fallbackEventName) {\n            this.registrations.push(NativeModule.registerEventHandler(viewTag + fallbackEventName, this.worklet));\n        }\n    }\n    unregisterFromEvents() {\n        this.registrations &&\n            this.registrations.forEach((id) => NativeModule.unregisterEventHandler(id));\n        this.registrations = undefined;\n    }\n}\n"],"mappings":";;;AAEA,OAAOA,YAAY;AACnB,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAIC,SAAS,EAAEC,OAAO;EAAA,OAAK,UAACC,GAAG,EAAK;IAChDD,OAAO,CAACE,QAAA,CAAcA,QAAA,CAAc,CAAC,CAAC,EAAED,GAAG,CAACE,WAAW,CAAC,EAAE;MAAEJ,SAAS,EAATA;IAAU,CAAC,CAAC,CAAC;EAC7E,CAAC;AAAA;AAAC,IACmBK,mBAAmB;EACpC,SAAAA,oBAAYC,OAAO,EAAmB;IAAA,IAAjBC,UAAU,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;IAAAG,eAAA,OAAAN,mBAAA;IAChC,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,UAAU,GAAGA,UAAU;IAC5B,IAAI,CAACK,cAAc,GAAG,KAAK;IAC3B,IAAI,CAACd,YAAY,CAACe,MAAM,EAAE;MACtB,IAAI,CAACC,SAAS,GAAGP,UAAU,CAACQ,MAAM,CAAC,UAACC,GAAG,EAAEhB,SAAS,EAAK;QACnDgB,GAAG,CAAChB,SAAS,CAAC,GAAGD,UAAU,CAACC,SAAS,EAAEM,OAAO,CAAC;QAC/C,OAAOU,GAAG;MACd,CAAC,EAAE,CAAC,CAAC,CAAC;IACV;EACJ;EAACC,YAAA,CAAAZ,mBAAA;IAAAa,GAAA;IAAAC,KAAA,EACD,SAAAC,cAAcC,UAAU,EAAE;MACtB,IAAI,CAACf,OAAO,GAAGe,UAAU;MACzB,IAAI,CAACT,cAAc,GAAG,IAAI;IAC9B;EAAC;IAAAM,GAAA;IAAAC,KAAA,EACD,SAAAG,kBAAkBC,OAAO,EAAiC;MAAA,IAAAC,KAAA;MAAA,IAA/BC,iBAAiB,GAAAjB,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGE,SAAS;MACpD,IAAI,CAACa,OAAO,GAAGA,OAAO;MACtB,IAAI,CAACG,aAAa,GAAG,IAAI,CAACnB,UAAU,CAACoB,GAAG,CAAC,UAAC3B,SAAS;QAAA,OAAKF,YAAY,CAAC8B,oBAAoB,CAACL,OAAO,GAAGvB,SAAS,EAAEwB,KAAI,CAAClB,OAAO,CAAC;MAAA,EAAC;MAC7H,IAAI,IAAI,CAACoB,aAAa,CAACjB,MAAM,KAAK,CAAC,IAAIgB,iBAAiB,EAAE;QACtD,IAAI,CAACC,aAAa,CAACG,IAAI,CAAC/B,YAAY,CAAC8B,oBAAoB,CAACL,OAAO,GAAGE,iBAAiB,EAAE,IAAI,CAACnB,OAAO,CAAC,CAAC;MACzG;IACJ;EAAC;IAAAY,GAAA;IAAAC,KAAA,EACD,SAAAW,qBAAA,EAAuB;MACnB,IAAI,CAACJ,aAAa,IACd,IAAI,CAACA,aAAa,CAACK,OAAO,CAAC,UAACC,EAAE;QAAA,OAAKlC,YAAY,CAACmC,sBAAsB,CAACD,EAAE,CAAC;MAAA,EAAC;MAC/E,IAAI,CAACN,aAAa,GAAGhB,SAAS;IAClC;EAAC;EAAA,OAAAL,mBAAA;AAAA;AAAA,SA3BgBA,mBAAmB,IAAA6B,OAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}