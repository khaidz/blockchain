{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport interpolateNode, { Extrapolate } from \"../reanimated1/derived/interpolate\";\nfunction getVal(config) {\n  'worklet';\n\n  var type = config.type,\n    coef = config.coef,\n    val = config.val,\n    ll = config.ll,\n    rr = config.rr,\n    x = config.x;\n  switch (type) {\n    case Extrapolate.IDENTITY:\n      return x;\n    case Extrapolate.CLAMP:\n      if (coef * val < coef * ll) {\n        return ll;\n      }\n      return rr;\n    case Extrapolate.EXTEND:\n    default:\n      return val;\n  }\n}\nfunction isExtrapolate(value) {\n  'worklet';\n\n  return value === Extrapolate.EXTEND || value === Extrapolate.CLAMP || value === Extrapolate.IDENTITY;\n}\nfunction validateType(type) {\n  'worklet';\n\n  var EXTRAPOLATE_ERROR_MSG = \"Reanimated: config object is not valid, please provide valid config, for example:\\n    interpolate(value, [inputRange], [outputRange], {\\n    extrapolateLeft: 'clamp',\\n    extrapolateRight: 'extend',\\n  })\";\n  var EXTRAPOLATE_ERROR = function EXTRAPOLATE_ERROR(extrapolate) {\n    return \"Reanimated: not supported value for \\\"\" + extrapolate + \"\\\" \\nSupported values: [\\\"extend\\\", \\\"clamp\\\", \\\"identity\\\"]\\n Valid example:\\n    interpolate(value, [inputRange], [outputRange], {\\n      \" + extrapolate + \": 'clamp',\\n  })\";\n  };\n  type = type !== null && type !== void 0 ? type : 'extend';\n  var hasExtrapolateLeft = type.hasOwnProperty('extrapolateLeft');\n  var hasExtrapolateRight = type.hasOwnProperty('extrapolateRight');\n  if (typeof type === 'object' && (Object.keys(type).length === 2 && !(hasExtrapolateLeft && hasExtrapolateRight) || Object.keys(type).length === 1 && !(hasExtrapolateLeft || hasExtrapolateRight) || Object.keys(type).length > 2)) {\n    throw new Error(EXTRAPOLATE_ERROR_MSG);\n  }\n  if (typeof type === 'object') {\n    if (hasExtrapolateLeft && !isExtrapolate(type.extrapolateLeft)) {\n      throw new Error(EXTRAPOLATE_ERROR('extrapolateLeft'));\n    }\n    if (hasExtrapolateRight && !isExtrapolate(type.extrapolateRight)) {\n      throw new Error(EXTRAPOLATE_ERROR('extrapolateRight'));\n    }\n  }\n  if (typeof type === 'string' && !isExtrapolate(type)) {\n    throw new Error(\"Reanimated: not supported value for \\\"interpolate\\\" \\nSupported values: [\\\"extend\\\", \\\"clamp\\\", \\\"identity\\\"]\\n Valid example:\\n       interpolate(value, [inputRange], [outputRange], \\\"clamp\\\")\");\n  }\n}\nfunction internalInterpolate(x, l, r, ll, rr, type) {\n  'worklet';\n\n  if (r - l === 0) return ll;\n  var progress = (x - l) / (r - l);\n  var val = ll + progress * (rr - ll);\n  var coef = rr >= ll ? 1 : -1;\n  var config = {\n    type: type,\n    coef: coef,\n    val: val,\n    ll: ll,\n    rr: rr,\n    x: x\n  };\n  validateType(type);\n  if (typeof type === 'object') {\n    if (coef * val < coef * ll) {\n      return getVal(_extends(config, {\n        type: type.extrapolateLeft\n      }));\n    } else if (coef * val > coef * ll) {\n      return getVal(_extends(config, {\n        type: type.extrapolateRight\n      }));\n    }\n  }\n  if (coef * val < coef * ll || coef * val > coef * rr) {\n    return getVal(config);\n  }\n  return val;\n}\nexport function interpolate(x, input, output, type) {\n  'worklet';\n\n  if (x && x.__nodeID) {\n    console.warn(\"interpolate() was renamed to interpolateNode() in Reanimated 2. Please use interpolateNode() instead\");\n    return interpolateNode.apply(undefined, arguments);\n  }\n  var length = input.length;\n  var narrowedInput = [];\n  if (x < input[0]) {\n    narrowedInput = [input[0], input[1], output[0], output[1]];\n  } else if (x > input[length - 1]) {\n    narrowedInput = [input[length - 2], input[length - 1], output[length - 2], output[length - 1]];\n  } else {\n    for (var i = 1; i < length; ++i) {\n      if (x <= input[i]) {\n        narrowedInput = [input[i - 1], input[i], output[i - 1], output[i]];\n        break;\n      }\n    }\n  }\n  return internalInterpolate.apply({}, [x].concat(narrowedInput).concat(type));\n}","map":{"version":3,"names":["interpolateNode","Extrapolate","getVal","config","type","coef","val","ll","rr","x","IDENTITY","CLAMP","EXTEND","isExtrapolate","value","validateType","EXTRAPOLATE_ERROR_MSG","EXTRAPOLATE_ERROR","extrapolate","hasExtrapolateLeft","hasOwnProperty","hasExtrapolateRight","Object","keys","length","Error","extrapolateLeft","extrapolateRight","internalInterpolate","l","r","progress","_extends","interpolate","input","output","__nodeID","console","warn","apply","undefined","arguments","narrowedInput","i","concat"],"sources":["/home/khaibq/blockchain/mobile/node_modules/react-native-reanimated/lib/reanimated2/interpolation.js"],"sourcesContent":["// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-nocheck\nimport interpolateNode, { Extrapolate, } from '../reanimated1/derived/interpolate';\nfunction getVal(config) {\n    'worklet';\n    const { type, coef, val, ll, rr, x } = config;\n    switch (type) {\n        case Extrapolate.IDENTITY:\n            return x;\n        case Extrapolate.CLAMP:\n            if (coef * val < coef * ll) {\n                return ll;\n            }\n            return rr;\n        case Extrapolate.EXTEND:\n        default:\n            return val;\n    }\n}\nfunction isExtrapolate(value) {\n    'worklet';\n    return (value === Extrapolate.EXTEND ||\n        value === Extrapolate.CLAMP ||\n        value === Extrapolate.IDENTITY);\n}\nfunction validateType(type) {\n    'worklet';\n    const EXTRAPOLATE_ERROR_MSG = `Reanimated: config object is not valid, please provide valid config, for example:\n    interpolate(value, [inputRange], [outputRange], {\n    extrapolateLeft: 'clamp',\n    extrapolateRight: 'extend',\n  })`;\n    const EXTRAPOLATE_ERROR = (extrapolate) => `Reanimated: not supported value for \"${extrapolate}\" \\nSupported values: [\"extend\", \"clamp\", \"identity\"]\\n Valid example:\n    interpolate(value, [inputRange], [outputRange], {\n      ${extrapolate}: 'clamp',\n  })`;\n    type = type !== null && type !== void 0 ? type : 'extend';\n    // eslint-disable-next-line no-prototype-builtins\n    const hasExtrapolateLeft = type.hasOwnProperty('extrapolateLeft');\n    // eslint-disable-next-line no-prototype-builtins\n    const hasExtrapolateRight = type.hasOwnProperty('extrapolateRight');\n    if (typeof type === 'object' &&\n        ((Object.keys(type).length === 2 &&\n            !(hasExtrapolateLeft && hasExtrapolateRight)) ||\n            (Object.keys(type).length === 1 &&\n                !(hasExtrapolateLeft || hasExtrapolateRight)) ||\n            Object.keys(type).length > 2)) {\n        throw new Error(EXTRAPOLATE_ERROR_MSG);\n    }\n    if (typeof type === 'object') {\n        if (hasExtrapolateLeft && !isExtrapolate(type.extrapolateLeft)) {\n            throw new Error(EXTRAPOLATE_ERROR('extrapolateLeft'));\n        }\n        if (hasExtrapolateRight && !isExtrapolate(type.extrapolateRight)) {\n            throw new Error(EXTRAPOLATE_ERROR('extrapolateRight'));\n        }\n    }\n    if (typeof type === 'string' && !isExtrapolate(type)) {\n        throw new Error(`Reanimated: not supported value for \"interpolate\" \\nSupported values: [\"extend\", \"clamp\", \"identity\"]\\n Valid example:\n       interpolate(value, [inputRange], [outputRange], \"clamp\")`);\n    }\n}\n// TODO: support default values in worklets:\n// e.g. function interpolate(x, input, output, type = Extrapolate.CLAMP)\nfunction internalInterpolate(x, l, r, ll, rr, type) {\n    'worklet';\n    if (r - l === 0)\n        return ll;\n    const progress = (x - l) / (r - l);\n    const val = ll + progress * (rr - ll);\n    const coef = rr >= ll ? 1 : -1;\n    const config = { type, coef, val, ll, rr, x };\n    validateType(type);\n    if (typeof type === 'object') {\n        if (coef * val < coef * ll) {\n            return getVal(Object.assign(config, { type: type.extrapolateLeft }));\n        }\n        else if (coef * val > coef * ll) {\n            return getVal(Object.assign(config, { type: type.extrapolateRight }));\n        }\n    }\n    if (coef * val < coef * ll || coef * val > coef * rr) {\n        return getVal(config);\n    }\n    return val;\n}\nexport function interpolate(x, input, output, type) {\n    'worklet';\n    if (x && x.__nodeID) {\n        console.warn(`interpolate() was renamed to interpolateNode() in Reanimated 2. Please use interpolateNode() instead`);\n        // we can't use rest parameters in worklets at the moment\n        // eslint-disable-next-line prefer-spread, prefer-rest-params\n        return interpolateNode.apply(undefined, arguments);\n    }\n    const length = input.length;\n    let narrowedInput = [];\n    if (x < input[0]) {\n        narrowedInput = [input[0], input[1], output[0], output[1]];\n    }\n    else if (x > input[length - 1]) {\n        narrowedInput = [\n            input[length - 2],\n            input[length - 1],\n            output[length - 2],\n            output[length - 1],\n        ];\n    }\n    else {\n        for (let i = 1; i < length; ++i) {\n            if (x <= input[i]) {\n                narrowedInput = [input[i - 1], input[i], output[i - 1], output[i]];\n                break;\n            }\n        }\n    }\n    return internalInterpolate.apply({}, [x].concat(narrowedInput).concat(type));\n}\n"],"mappings":";AAEA,OAAOA,eAAe,IAAIC,WAAW;AACrC,SAASC,MAAMA,CAACC,MAAM,EAAE;EACpB,SAAS;;EACT,IAAQC,IAAI,GAA2BD,MAAM,CAArCC,IAAI;IAAEC,IAAI,GAAqBF,MAAM,CAA/BE,IAAI;IAAEC,GAAG,GAAgBH,MAAM,CAAzBG,GAAG;IAAEC,EAAE,GAAYJ,MAAM,CAApBI,EAAE;IAAEC,EAAE,GAAQL,MAAM,CAAhBK,EAAE;IAAEC,CAAC,GAAKN,MAAM,CAAZM,CAAC;EAClC,QAAQL,IAAI;IACR,KAAKH,WAAW,CAACS,QAAQ;MACrB,OAAOD,CAAC;IACZ,KAAKR,WAAW,CAACU,KAAK;MAClB,IAAIN,IAAI,GAAGC,GAAG,GAAGD,IAAI,GAAGE,EAAE,EAAE;QACxB,OAAOA,EAAE;MACb;MACA,OAAOC,EAAE;IACb,KAAKP,WAAW,CAACW,MAAM;IACvB;MACI,OAAON,GAAG;EAAC;AAEvB;AACA,SAASO,aAAaA,CAACC,KAAK,EAAE;EAC1B,SAAS;;EACT,OAAQA,KAAK,KAAKb,WAAW,CAACW,MAAM,IAChCE,KAAK,KAAKb,WAAW,CAACU,KAAK,IAC3BG,KAAK,KAAKb,WAAW,CAACS,QAAQ;AACtC;AACA,SAASK,YAAYA,CAACX,IAAI,EAAE;EACxB,SAAS;;EACT,IAAMY,qBAAqB,mNAI1B;EACD,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiBA,CAAIC,WAAW;IAAA,kDAA6CA,WAAW,oJAE1FA,WAAW;EAAA,CACd;EACDd,IAAI,GAAGA,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAGA,IAAI,GAAG,QAAQ;EAEzD,IAAMe,kBAAkB,GAAGf,IAAI,CAACgB,cAAc,CAAC,iBAAiB,CAAC;EAEjE,IAAMC,mBAAmB,GAAGjB,IAAI,CAACgB,cAAc,CAAC,kBAAkB,CAAC;EACnE,IAAI,OAAOhB,IAAI,KAAK,QAAQ,KACtBkB,MAAM,CAACC,IAAI,CAACnB,IAAI,CAAC,CAACoB,MAAM,KAAK,CAAC,IAC5B,EAAEL,kBAAkB,IAAIE,mBAAmB,CAAC,IAC3CC,MAAM,CAACC,IAAI,CAACnB,IAAI,CAAC,CAACoB,MAAM,KAAK,CAAC,IAC3B,EAAEL,kBAAkB,IAAIE,mBAAmB,CAAE,IACjDC,MAAM,CAACC,IAAI,CAACnB,IAAI,CAAC,CAACoB,MAAM,GAAG,CAAC,CAAC,EAAE;IACnC,MAAM,IAAIC,KAAK,CAACT,qBAAqB,CAAC;EAC1C;EACA,IAAI,OAAOZ,IAAI,KAAK,QAAQ,EAAE;IAC1B,IAAIe,kBAAkB,IAAI,CAACN,aAAa,CAACT,IAAI,CAACsB,eAAe,CAAC,EAAE;MAC5D,MAAM,IAAID,KAAK,CAACR,iBAAiB,CAAC,iBAAiB,CAAC,CAAC;IACzD;IACA,IAAII,mBAAmB,IAAI,CAACR,aAAa,CAACT,IAAI,CAACuB,gBAAgB,CAAC,EAAE;MAC9D,MAAM,IAAIF,KAAK,CAACR,iBAAiB,CAAC,kBAAkB,CAAC,CAAC;IAC1D;EACJ;EACA,IAAI,OAAOb,IAAI,KAAK,QAAQ,IAAI,CAACS,aAAa,CAACT,IAAI,CAAC,EAAE;IAClD,MAAM,IAAIqB,KAAK,qMAC0C;EAC7D;AACJ;AAGA,SAASG,mBAAmBA,CAACnB,CAAC,EAAEoB,CAAC,EAAEC,CAAC,EAAEvB,EAAE,EAAEC,EAAE,EAAEJ,IAAI,EAAE;EAChD,SAAS;;EACT,IAAI0B,CAAC,GAAGD,CAAC,KAAK,CAAC,EACX,OAAOtB,EAAE;EACb,IAAMwB,QAAQ,GAAG,CAACtB,CAAC,GAAGoB,CAAC,KAAKC,CAAC,GAAGD,CAAC,CAAC;EAClC,IAAMvB,GAAG,GAAGC,EAAE,GAAGwB,QAAQ,IAAIvB,EAAE,GAAGD,EAAE,CAAC;EACrC,IAAMF,IAAI,GAAGG,EAAE,IAAID,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC;EAC9B,IAAMJ,MAAM,GAAG;IAAEC,IAAI,EAAJA,IAAI;IAAEC,IAAI,EAAJA,IAAI;IAAEC,GAAG,EAAHA,GAAG;IAAEC,EAAE,EAAFA,EAAE;IAAEC,EAAE,EAAFA,EAAE;IAAEC,CAAC,EAADA;EAAE,CAAC;EAC7CM,YAAY,CAACX,IAAI,CAAC;EAClB,IAAI,OAAOA,IAAI,KAAK,QAAQ,EAAE;IAC1B,IAAIC,IAAI,GAAGC,GAAG,GAAGD,IAAI,GAAGE,EAAE,EAAE;MACxB,OAAOL,MAAM,CAAC8B,QAAA,CAAc7B,MAAM,EAAE;QAAEC,IAAI,EAAEA,IAAI,CAACsB;MAAgB,CAAC,CAAC,CAAC;IACxE,CAAC,MACI,IAAIrB,IAAI,GAAGC,GAAG,GAAGD,IAAI,GAAGE,EAAE,EAAE;MAC7B,OAAOL,MAAM,CAAC8B,QAAA,CAAc7B,MAAM,EAAE;QAAEC,IAAI,EAAEA,IAAI,CAACuB;MAAiB,CAAC,CAAC,CAAC;IACzE;EACJ;EACA,IAAItB,IAAI,GAAGC,GAAG,GAAGD,IAAI,GAAGE,EAAE,IAAIF,IAAI,GAAGC,GAAG,GAAGD,IAAI,GAAGG,EAAE,EAAE;IAClD,OAAON,MAAM,CAACC,MAAM,CAAC;EACzB;EACA,OAAOG,GAAG;AACd;AACA,OAAO,SAAS2B,WAAWA,CAACxB,CAAC,EAAEyB,KAAK,EAAEC,MAAM,EAAE/B,IAAI,EAAE;EAChD,SAAS;;EACT,IAAIK,CAAC,IAAIA,CAAC,CAAC2B,QAAQ,EAAE;IACjBC,OAAO,CAACC,IAAI,wGAAwG;IAGpH,OAAOtC,eAAe,CAACuC,KAAK,CAACC,SAAS,EAAEC,SAAS,CAAC;EACtD;EACA,IAAMjB,MAAM,GAAGU,KAAK,CAACV,MAAM;EAC3B,IAAIkB,aAAa,GAAG,EAAE;EACtB,IAAIjC,CAAC,GAAGyB,KAAK,CAAC,CAAC,CAAC,EAAE;IACdQ,aAAa,GAAG,CAACR,KAAK,CAAC,CAAC,CAAC,EAAEA,KAAK,CAAC,CAAC,CAAC,EAAEC,MAAM,CAAC,CAAC,CAAC,EAAEA,MAAM,CAAC,CAAC,CAAC,CAAC;EAC9D,CAAC,MACI,IAAI1B,CAAC,GAAGyB,KAAK,CAACV,MAAM,GAAG,CAAC,CAAC,EAAE;IAC5BkB,aAAa,GAAG,CACZR,KAAK,CAACV,MAAM,GAAG,CAAC,CAAC,EACjBU,KAAK,CAACV,MAAM,GAAG,CAAC,CAAC,EACjBW,MAAM,CAACX,MAAM,GAAG,CAAC,CAAC,EAClBW,MAAM,CAACX,MAAM,GAAG,CAAC,CAAC,CACrB;EACL,CAAC,MACI;IACD,KAAK,IAAImB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGnB,MAAM,EAAE,EAAEmB,CAAC,EAAE;MAC7B,IAAIlC,CAAC,IAAIyB,KAAK,CAACS,CAAC,CAAC,EAAE;QACfD,aAAa,GAAG,CAACR,KAAK,CAACS,CAAC,GAAG,CAAC,CAAC,EAAET,KAAK,CAACS,CAAC,CAAC,EAAER,MAAM,CAACQ,CAAC,GAAG,CAAC,CAAC,EAAER,MAAM,CAACQ,CAAC,CAAC,CAAC;QAClE;MACJ;IACJ;EACJ;EACA,OAAOf,mBAAmB,CAACW,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC9B,CAAC,CAAC,CAACmC,MAAM,CAACF,aAAa,CAAC,CAACE,MAAM,CAACxC,IAAI,CAAC,CAAC;AAChF"},"metadata":{},"sourceType":"module","externalDependencies":[]}